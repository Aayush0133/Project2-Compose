# Docker Compose file to set up Jenkins and Docker-in-Docker (DinD) environment
version: '3'

services:
  # Docker-in-Docker (DinD) service
  # This container allows Jenkins to execute Docker commands within its pipelines.
  dind:
    image: docker:20.10.7-dind  # Using Docker-in-Docker image to provide Docker services inside the container
    container_name: docker-dind # Naming the container docker-dind
    privileged: true            # Grants extended privileges required to run Docker inside Docker
    environment:
      - DOCKER_TLS_CERTDIR=/certs  # Enables Docker's TLS for secure communication
    volumes:
      - dind_storage:/var/lib/docker # Persistent storage for Docker daemon data
      - docker-certs-client:/certs/client # Client certificates volume for TLS
    networks:
      - jenkins-network  # Connects to a custom network that Jenkins is also on

  # Jenkins service
  # Jenkins will use the DinD service to run Docker commands and manage containers.
  jenkins:
    image: jenkins/jenkins:lts-jdk11  # Jenkins image with long-term support and JDK 11
    container_name: jenkins           # Naming the container jenkins
    privileged: true                  # Jenkins needs extended privileges to interact with Docker
    environment:
      - DOCKER_HOST=tcp://dind:2376   # Jenkins will communicate with Docker on the DinD container via this address
      - DOCKER_CERT_PATH=/certs/client # Path to the client certificates for secure Docker communication
      - DOCKER_TLS_VERIFY=1           # Enable TLS verification for secure communication
    volumes:
      - jenkins_home:/var/jenkins_home # Persistent storage for Jenkins data
      - /var/run/docker.sock:/var/run/docker.sock # Links the Docker socket so Jenkins can use Docker commands
      - docker-certs-client:/certs/client:ro # Mounts the certificates volume (read-only) for secure Docker communication
    ports:
      - "8080:8080"  # Exposing Jenkins on port 8080 for the web interface
      - "50000:50000" # Exposing port 50000 for communication with Jenkins agents
    networks:
      - jenkins-network # Connects to the custom Jenkins network
    depends_on:
      - dind  # Jenkins service will wait for the DinD service to be fully started before running

# Volumes for persistent storage
volumes:
  jenkins_home:      # Persistent data for Jenkins home directory
  dind_storage:      # Persistent data for Docker daemon (DinD)
  docker-certs-client: # Storage for Docker client certificates

# Custom network for communication between Jenkins and DinD
networks:
  jenkins-network:
